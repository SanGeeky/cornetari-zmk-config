/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos { compatible = "zmk,combos"; };

    behaviors {
        capslock: capslock {
            compatible = "zmk,behavior-tap-dance";
            label = "CAPSLOCK";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&caps_word>;
        };

        media: media {
            compatible = "zmk,behavior-hold-tap";
            label = "MEDIA";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        tap_cut: tap_cut {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_CUT";
            #binding-cells = <0>;
            bindings = <&kp X>, <&kp LG(X)>;
        };

        tap_copy: tap_copy {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_COPY";
            #binding-cells = <0>;
            bindings = <&kp C>, <&kp LG(X)>;
        };

        tap_paste: tap_paste {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_PASTE";
            #binding-cells = <0>;
            bindings = <&kp V>, <&kp LG(V)>;
        };

        tap_undo: tap_undo {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_UNDO";
            #binding-cells = <0>;
            bindings = <&kp Z>, <&kp LG(Z)>;
        };

        number_layer: number_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "NUMBER_LAYER";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        side_bar: side_bar {
            compatible = "zmk,behavior-tap-dance";
            label = "SIDE_BAR";
            #binding-cells = <0>;
            bindings = <&kp B>, <&kp LG(B)>;
        };

        K_kollapse: K_kollapse {
            compatible = "zmk,behavior-tap-dance";
            label = "K_KOLLAPSE";
            #binding-cells = <0>;
            bindings = <&kp K>, <&kollapse>;
        };

        kollapse: kollapse {
            compatible = "zmk,behavior-caps-word";
            label = "KOLLAPSE";
            #binding-cells = <0>;
            continue-list = <LEFT_GUI K LGUI NUMBER_0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&number_layer 1 TAB  &kp Q      &kp W     &kp E      &kp R       &kp T             &kp Y      &kp U  &kp I        &kp O    &kp P     &kp BSPC
&kp LCTRL            &kp A      &kp S     &kp D      &kp F       &kp G             &kp H      &kp J  &K_kollapse  &kp L    &kp SEMI  &kp SQT
&capslock            &tap_undo  &tap_cut  &tap_copy  &tap_paste  &side_bar         &kp N      &kp M  &kp COMMA    &kp DOT  &kp FSLH  &kp ESC
                                          &kp LGUI   &mo 2       &media 4 SPACE    &kp ENTER  &mo 3  &kp RALT
            >;
        };

        number_layer {
            bindings = <
&none             &kp TAB  &none  &none         &none  &none        &kp PERCENT  &kp N7         &kp N8        &kp N9        &kp EQUAL  &kp BSPC
&kp LEFT_CONTROL  &none    &none  &none         &none  &none        &kp DOLLAR   &kp NUMBER_4   &kp N5        &kp NUMBER_6  &kp PLUS   &kp ASTRK
&kp LEFT_SHIFT    &none    &none  &none         &none  &none        &kp DOT      &kp N1         &kp N2        &kp N3        &kp MINUS  &kp SLASH
                                  &kp LEFT_GUI  &none  &kp SPACE    &kp ENTER    &kp RIGHT_ALT  &kp NUMBER_0
            >;
        };

        navigation_layer {
            bindings = <
&none      &kp TAB         &kp F1     &kp F2        &kp F3        &kp F4       &none      &kp HOME   &kp UP    &kp END    &none  &kp BSPC
&kp LCTRL  &kp LEFT_SHIFT  &kp RCTRL  &kp LEFT_ALT  &kp LEFT_GUI  &kp F8       &none      &kp LEFT   &kp DOWN  &kp RIGHT  &none  &kp DELETE
&kp LSHFT  &none           &kp F9     &kp F10       &kp F11       &kp F12      &none      &kp PG_UP  &none     &kp PG_DN  &none  &kp ESC
                                      &kp LGUI      &none         &kp SPACE    &kp ENTER  &none      &kp LALT
            >;
        };

        symbol_layer {
            bindings = <
&kp TAB    &kp EXCLAMATION  &kp AT_SIGN  &kp HASH      &kp DOLLAR     &kp PERCENT    &kp PLUS   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp MINUS       &kp EQUAL      &kp BACKSPACE
&kp LCTRL  &none            &none        &none         &kp AMPERSAND  &kp PIPE       &kp SLASH  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp UNDERSCORE  &kp BACKSLASH  &none
&kp LSHFT  &none            &none        &none         &none          &none          &kp GRAVE  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp ASTERISK    &kp CARET      &kp ESCAPE
                                         &kp LEFT_GUI  &none          &kp SPACE      &kp RET    &none                 &kp LEFT_ALT
            >;
        };

        media_layer {
            bindings = <
&kp C_AL_COFFEE  &none  &kp C_PREV  &kp C_PLAY_PAUSE      &kp C_NEXT            &none    &none      &none                 &none  &bt BT_PRV  &bt BT_NXT  &bt BT_CLR_ALL
&none            &none  &kp C_MUTE  &kp C_VOLUME_DOWN     &kp C_VOL_UP          &none    &none      &none                 &none  &none       &none       &none
&none            &none  &none       &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &none    &none      &none                 &none  &none       &none       &none
                                    &none                 &none                 &none    &kp PSCRN  &kp RG(RS(NUMBER_4))  &none
            >;
        };
    };
};
