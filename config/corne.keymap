/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

 #include <behaviors.dtsi>
 #include <dt-bindings/zmk/keys.h>

 / {
     combos {
         compatible = "zmk,combos";

         delete {
             bindings = <&kp DELETE>;
             key-positions = <41 11>;
         };
     };

     behaviors {
         symbol: symbol {
             compatible = "zmk,behavior-hold-tap";
             label = "SYMBOL";
             bindings = <&mo>, <&tog>;

             #binding-cells = <2>;
             tapping-term-ms = <200>;
         };

         capslock: capslock {
             compatible = "zmk,behavior-tap-dance";
             label = "CAPSLOCK";
             #binding-cells = <0>;
             bindings = <&kp LEFT_SHIFT>, <&caps_word>;
         };

         media: media {
             compatible = "zmk,behavior-hold-tap";
             label = "MEDIA";
             bindings = <&mo>, <&tog>;

             #binding-cells = <2>;
             tapping-term-ms = <200>;
         };
     };

     keymap {
         compatible = "zmk,keymap";

         base_layer {
             // -----------------------------------------------------------------------------------------
             // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
             // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
             // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
             //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

             bindings = <
 &kp TAB    &kp Q  &kp W  &kp E     &kp R       &kp T        &kp Y    &kp U        &kp I      &kp O    &kp P     &kp BSPC
 &kp LCTRL  &kp A  &kp S  &kp D     &kp F       &kp G        &kp H    &kp J        &kp K      &kp L    &kp SEMI  &kp SQT
 &capslock  &kp Z  &kp X  &kp C     &kp V       &kp B        &kp N    &kp M        &kp COMMA  &kp DOT  &kp FSLH  &kp ESC
                          &kp LGUI  &media 4 1  &kp SPACE    &kp RET  &symbol 3 2  &kp RALT
             >;
         };

         number_layer {
             bindings = <
 &kp TAB           &trans  &trans  &trans        &kp MINUS   &kp PLUS        &trans     &kp N7        &kp N8        &kp N9        &kp MINUS  &kp BSPC
 &kp LEFT_CONTROL  &trans  &trans  &trans        &kp FSLH    &kp ASTERISK    &kp DOT    &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp PLUS   &trans
 &kp LEFT_SHIFT    &trans  &trans  &trans        &trans      &kp PERCENT     &kp N0     &kp N1        &kp N2        &kp N3        &kp EQUAL  &kp ESC
                                   &kp LEFT_GUI  &media 4 0  &kp SPACE       &kp ENTER  &symbol 3 2   &kp LEFT_ALT
             >;
         };

         navigation_layer {
             bindings = <
 &kp DEL    &trans  &kp F1  &kp F2    &kp F3   &kp F4       &trans     &kp HOME     &kp UP    &kp END    &kp HOME  &kp BSPC
 &kp LCTRL  &trans  &kp F5  &kp F6    &kp F7   &kp F8       &trans     &kp LEFT     &kp DOWN  &kp RIGHT  &trans    &trans
 &kp LSHFT  &trans  &kp F9  &kp F10   &kp F11  &kp F12      &trans     &kp PG_UP    &trans    &kp PG_DN  &trans    &kp ESC
                            &kp LGUI  &mo 4    &kp SPACE    &kp ENTER  &symbol 3 0  &kp LALT
             >;
         };

         symbol_layer {
             bindings = <
 &kp TAB    &kp EXCLAMATION  &kp AT_SIGN  &kp HASH      &kp DOLLAR     &kp PERCENT    &kp PLUS   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp MINUS       &kp EQUAL      &kp BACKSPACE
 &kp LCTRL  &trans           &trans       &trans        &kp AMPERSAND  &kp PIPE       &kp SLASH  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp UNDERSCORE  &kp BACKSLASH  &trans
 &kp LSHFT  &trans           &trans       &trans        &trans         &trans         &kp GRAVE  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp ASTERISK    &trans         &kp ESCAPE
                                          &kp LEFT_GUI  &trans         &kp SPACE      &kp RET    &trans                &kp LEFT_ALT
             >;
         };

         media_layer {
             bindings = <
 &kp C_AL_COFFEE  &trans  &kp C_PREV  &kp C_PLAY_PAUSE      &kp C_NEXT            &trans    &trans           &trans                &trans  &trans  &trans  &trans
 &trans           &trans  &kp C_MUTE  &kp C_VOLUME_DOWN     &kp C_VOL_UP          &trans    &trans           &trans                &trans  &trans  &trans  &trans
 &trans           &trans  &trans      &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &trans    &trans           &trans                &trans  &trans  &trans  &trans
                                      &trans                &trans                &trans    &kp PRINTSCREEN  &kp RG(RS(NUMBER_4))  &trans
             >;
         };
     };
 };
